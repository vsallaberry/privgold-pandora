--- configure.ac.orig	2022-03-08 14:26:09.000000000 +0100
+++ configure.ac	2022-03-08 14:45:29.000000000 +0100
@@ -4911,19 +4911,31 @@
 # with setup.py.
 py_cv_lib_readline=no
 AC_MSG_CHECKING([how to link readline libs])
-for py_libtermcap in "" tinfo ncursesw ncurses curses termcap; do
+for py_libreadline in edit readline; do
+ for py_libtermcap in "" tinfo ncursesw ncurses curses termcap; do
   if test -z "$py_libtermcap"; then
-    READLINE_LIBS="-lreadline"
+    READLINE_LIBS="-l$py_libreadline"
   else
-    READLINE_LIBS="-lreadline -l$py_libtermcap"
+    READLINE_LIBS="-l$py_libreadline -l$py_libtermcap"
   fi
   LIBS="$READLINE_LIBS $LIBS_no_readline"
   AC_LINK_IFELSE(
-    [AC_LANG_CALL([],[readline])],
-    [py_cv_lib_readline=yes])
+                 [AC_LANG_CALL([],[readline])],
+                 [py_cv_lib_readline=yes])
   if test $py_cv_lib_readline = yes; then
+    if test x$py_libreadline = xedit; then
+      py_includereadline=editline/readline.h
+      AC_DEFINE_UNQUOTED(HAVE_LIBREADLINE_EDIT, [1], [libedit.])
+    else
+      py_includereadline=readline/readline.h
+      AC_DEFINE_UNQUOTED(HAVE_LIBREADLINE_READLINE, [1], [libreadline.])
+    fi
     break
   fi
+ done
+ if test $py_cv_lib_readline = yes; then
+   break
+ fi
 done
 # Uncomment this line if you want to use READINE_LIBS in Makefile or scripts
 #AC_SUBST([READLINE_LIBS])
@@ -4932,60 +4943,60 @@
 else
   AC_MSG_RESULT([$READLINE_LIBS])
   AC_DEFINE(HAVE_LIBREADLINE, 1,
-    [Define if you have the readline library (-lreadline).])
+    [Define if you have the readline library (-l$py_libreadline).])
 fi
 
 # check for readline 2.2
-AC_PREPROC_IFELSE([AC_LANG_SOURCE([[#include <readline/readline.h>]])],
+AC_PREPROC_IFELSE([AC_LANG_SOURCE([[#include <$py_includereadline>]])],
   [have_readline=yes],
   [have_readline=no]
 )
 if test $have_readline = yes
 then
   AC_EGREP_HEADER([extern int rl_completion_append_character;],
-  [readline/readline.h],
+  [$py_includereadline],
   AC_DEFINE(HAVE_RL_COMPLETION_APPEND_CHARACTER, 1,
   [Define if you have readline 2.2]), )
   AC_EGREP_HEADER([extern int rl_completion_suppress_append;],
-  [readline/readline.h],
+  [$py_includereadline],
   AC_DEFINE(HAVE_RL_COMPLETION_SUPPRESS_APPEND, 1,
   [Define if you have rl_completion_suppress_append]), )
 fi
 
 # check for readline 4.0
-AC_CHECK_LIB(readline, rl_pre_input_hook,
+AC_CHECK_LIB($py_libreadline, rl_pre_input_hook,
 	AC_DEFINE(HAVE_RL_PRE_INPUT_HOOK, 1,
         [Define if you have readline 4.0]), ,$READLINE_LIBS)
 
 # also in 4.0
-AC_CHECK_LIB(readline, rl_completion_display_matches_hook,
+AC_CHECK_LIB($py_libreadline, rl_completion_display_matches_hook,
 	AC_DEFINE(HAVE_RL_COMPLETION_DISPLAY_MATCHES_HOOK, 1,
         [Define if you have readline 4.0]), ,$READLINE_LIBS)
 
 # also in 4.0, but not in editline
-AC_CHECK_LIB(readline, rl_resize_terminal,
+AC_CHECK_LIB($py_libreadline, rl_resize_terminal,
 	AC_DEFINE(HAVE_RL_RESIZE_TERMINAL, 1,
         [Define if you have readline 4.0]), ,$READLINE_LIBS)
 
 # check for readline 4.2
-AC_CHECK_LIB(readline, rl_completion_matches,
+AC_CHECK_LIB($py_libreadline, rl_completion_matches,
 	AC_DEFINE(HAVE_RL_COMPLETION_MATCHES, 1,
         [Define if you have readline 4.2]), ,$READLINE_LIBS)
 
 # also in readline 4.2
-AC_PREPROC_IFELSE([AC_LANG_SOURCE([[#include <readline/readline.h>]])],
+AC_PREPROC_IFELSE([AC_LANG_SOURCE([[#include <$py_includereadline>]])],
   [have_readline=yes],
   [have_readline=no]
 )
 if test $have_readline = yes
 then
   AC_EGREP_HEADER([extern int rl_catch_signals;],
-  [readline/readline.h],
+  [$py_includereadline],
   AC_DEFINE(HAVE_RL_CATCH_SIGNAL, 1,
   [Define if you can turn off readline's signal handling.]), )
 fi
 
-AC_CHECK_LIB(readline, append_history,
+AC_CHECK_LIB($py_libreadline, append_history,
 	AC_DEFINE(HAVE_RL_APPEND_HISTORY, 1,
         [Define if readline supports append_history]), ,$READLINE_LIBS)
 
